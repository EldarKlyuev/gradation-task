version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15
    container_name: gradation_postgres
    environment:
      POSTGRES_DB: gradation_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gradation_network
    restart: unless-stopped

  # Django приложение
  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: gradation_django
    environment:
      - DB_NAME=gradation_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DEBUG=True
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - media_files:/app/media
    depends_on:
      - postgres
    networks:
      - gradation_network
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # FastAPI приложение
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: gradation_fastapi
    ports:
      - "8001:8001"
    volumes:
      - .:/app
    networks:
      - gradation_network
    restart: unless-stopped
    command: uvicorn fastapi_app.main:app --host 0.0.0.0 --port 8001 --reload

  # Nginx для проксирования запросов (опционально)
  nginx:
    image: nginx:alpine
    container_name: gradation_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - django
      - fastapi
    networks:
      - gradation_network
    restart: unless-stopped

volumes:
  postgres_data:
  media_files:

networks:
  gradation_network:
    driver: bridge 